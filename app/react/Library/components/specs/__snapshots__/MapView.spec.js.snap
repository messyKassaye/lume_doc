// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MapView render() should pass the entities 1`] = `
Immutable.List [
  Immutable.Map {
    "template": "1",
    "metadata": Immutable.Map {
      "geo_prop": Immutable.List [
        Immutable.Map {
          "value": Immutable.Map {
            "lat": 1,
            "lon": 2,
          },
        },
      ],
      "age": Immutable.List [
        Immutable.Map {
          "value": "23",
        },
      ],
    },
    "sharedId": "1",
  },
  Immutable.Map {
    "template": "1",
    "metadata": Immutable.Map {
      "age": Immutable.List [
        Immutable.Map {
          "value": "23",
        },
      ],
    },
    "sharedId": "2",
  },
  Immutable.Map {
    "template": "2",
    "metadata": Immutable.Map {
      "other_geo_prop": Immutable.List [
        Immutable.Map {
          "value": Immutable.Map {
            "lat": 3,
            "lon": 4,
          },
        },
      ],
      "age": Immutable.List [
        Immutable.Map {
          "value": "23",
        },
      ],
    },
    "sharedId": "3",
  },
  Immutable.Map {
    "template": "2",
    "metadata": Immutable.Map {
      "other_geo_prop": Immutable.List [
        Immutable.Map {
          "value": Immutable.Map {
            "lat": 1,
            "lon": 2,
          },
        },
      ],
      "age": Immutable.List [
        Immutable.Map {
          "value": "23",
        },
      ],
    },
    "sharedId": "4",
  },
  Immutable.Map {
    "template": "3",
    "metadata": Immutable.Map {
      "age": Immutable.List [
        Immutable.Map {
          "value": "23",
        },
      ],
    },
    "sharedId": "4",
  },
]
`;

exports[`MapView render() should render a map 1`] = `
<Map
  autoCenter={true}
  clickOnCluster={[Function]}
  clickOnMarker={[Function]}
  cluster={true}
  height={null}
  hoverOnMarker={[Function]}
  interactiveLayerIds={Array []}
  latitude={null}
  longitude={null}
  markers={
    Array [
      Object {
        "value": "markers",
      },
    ]
  }
  onClick={[Function]}
  renderMarker={null}
  renderPopupInfo={[Function]}
  scrollZoom={true}
  showControls={false}
  width={null}
  zoom={1}
/>
`;

exports[`MapView renderPopupInfo should render the popup for inherited geolocations 1`] = `
<div
  className="popup-container"
>
  <div
    className="template-label"
  >
    <Connect(TemplateLabel)
      template="5e0fde90d6ecbf60be14eca2"
    />
  </div>
  <div
    className="entity-data"
  >
    <div>
      <span
        className="popup-name"
      >
        Secure investigation and documentation
      </span>
      <span
        className="popup-metadata-property"
      >
        (
        Country
        )
      </span>
    </div>
    <div
      className="marker-info"
    >
      <Connect(Icon)
        className="tag-icon"
        icon="tag"
      />
      <span
        className="entity-title"
      >
        Bolivia
      </span>
    </div>
  </div>
</div>
`;

exports[`MapView renderPopupInfo should render the popup for non inherited geolocations with info 1`] = `
<div
  className="popup-container"
>
  <div
    className="template-label"
  >
    <Connect(TemplateLabel)
      template="5e0fde90d6ecbf60be14eca2"
    />
  </div>
  <div
    className="entity-data"
  >
    <div>
      <span
        className="popup-name"
      >
        Entity with info
      </span>
      <span
        className="popup-metadata-property"
      >
        (
        Entity
        )
      </span>
    </div>
    <div
      className="marker-info"
    >
      <Connect(Icon)
        className="tag-icon"
        icon="tag"
      />
      Info to Show
    </div>
  </div>
</div>
`;

exports[`MapView renderPopupInfo should render the popup for simple geolocations 1`] = `
<div
  className="popup-container"
>
  <div
    className="template-label"
  >
    <Connect(TemplateLabel)
      template="5e0fdf2ad6ecbf60be14f094"
    />
  </div>
  <div
    className="entity-data"
  >
    <div>
      <span
        className="popup-name"
      >
        Uruguay
      </span>
      <span
        className="popup-metadata-property"
      >
        (
        Geolocation
        )
      </span>
    </div>
    
  </div>
</div>
`;
