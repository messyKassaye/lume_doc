// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ThesauriForm render should render DragAndDropContainer with thesauri items 1`] = `
<div
  className="thesauri"
>
  <Connect(Form)
    model="thesauri.data"
    onSubmit={[Function]}
    validators={
      Object {
        "name": Object {
          "duplicated": [Function],
          "required": [Function],
        },
      }
    }
  >
    <div
      className="panel panel-default thesauri"
    >
      <div
        className="panel-heading"
      >
        <FormGroup
          className=""
        >
          <Modeled(Connect(Field))
            model=".name"
          >
            <input
              className="form-control"
              id="thesauriName"
              placeholder="Thesauri name"
              type="text"
            />
            <ShowIf>
              <div
                className="validation-error"
              >
                <Connect(Icon)
                  icon="exclamation-triangle"
                  size="xs"
                />
                 Duplicated name
              </div>
            </ShowIf>
          </Modeled(Connect(Field))>
        </FormGroup>
      </div>
      <div
        className="thesauri-values"
      >
        <div
          className=""
        >
          <b>
            Items:
          </b>
        </div>
        <DragDropContext(DropTarget(DragAndDropContainer))
          iconHandle={true}
          items={
            Array [
              Object {
                "label": "Heroes",
                "values": Array [
                  Object {
                    "label": "Batman",
                  },
                  Object {
                    "label": "Robin",
                  },
                ],
              },
              Object {
                "label": "Villains",
                "values": Array [
                  Object {
                    "label": "Joker",
                  },
                  Object {
                    "label": "Penguin",
                  },
                ],
              },
            ]
          }
          onChange={[Function]}
          renderItem={[Function]}
        />
      </div>
      <div
        className="settings-footer"
      >
        <BackButton
          to="/settings/dictionaries"
        />
        <button
          className="btn btn-primary"
          onClick={[Function]}
          type="button"
        >
          <Connect(Icon)
            icon="plus"
          />
          <span
            className="btn-label"
          >
            Add group
          </span>
        </button>
        <button
          className="btn btn-primary"
          onClick={[Function]}
          type="button"
        >
          <Connect(Icon)
            icon="sort-alpha-down"
          />
          <span
            className="btn-label"
          >
            Sort
          </span>
        </button>
        <button
          className="btn btn-primary import-template"
          onClick={[Function]}
          type="button"
        >
          <Connect(Icon)
            icon="upload"
          />
          <span
            className="btn-label"
          >
            Import
          </span>
        </button>
        <button
          className="btn btn-success save-template"
          type="submit"
        >
          <Connect(Icon)
            icon="save"
          />
          <span
            className="btn-label"
          >
            Save
          </span>
        </button>
      </div>
    </div>
  </Connect(Form)>
  <form
    style={
      Object {
        "display": "none",
      }
    }
  >
    <input
      accept="text/csv"
      onChange={[Function]}
      style={
        Object {
          "display": "none",
        }
      }
      type="file"
    />
  </form>
</div>
`;

exports[`ThesauriForm renderItem should render ThesauriFormItem with specified value and index 1`] = `
<ThesauriFormItem
  index={1}
  onChange={[Function]}
  removeValue={[Function]}
  value={
    Object {
      "label": "Villains",
      "values": Array [
        Object {
          "label": "Joker",
        },
        Object {
          "label": "Penguin",
        },
      ],
    }
  }
/>
`;
