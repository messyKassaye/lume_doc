// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RelationshipsGraphEdit when relationships have text references with ranges should render the Docs with the target text reference 1`] = `
<div
  className="rightRelationships"
>
  <div
    className="rightRelationshipsTypeGroup "
    key="0"
  >
    <div
      className="rightRelationshipType
                             "
    >
      <div
        className="rw-dropdown-list rw-widget no-edit"
      >
        <div
          className="rw-widget-input rw-widget-picker rw-widget-container no-edit"
        >
          <div
            className="rw-input rw-dropdown-list-input no-edit"
          />
        </div>
      </div>
    </div>
    <div
      className="rightRelationship  "
      key="0"
    >
      <div
        className="rightRelationshipType"
      >
        <Connect(Doc)
          className="item-collapsed"
          doc={
            Immutable.Map {
              "sharedId": "sharedId2",
            }
          }
          onClick={[Function]}
          searchParams={
            Object {
              "order": "desc",
              "sort": "creationDate",
              "treatAs": "number",
            }
          }
          targetReference={
            Immutable.Map {
              "entity": "sharedId2",
              "hub": 1,
              "template": null,
              "entityData": Immutable.Map {
                "sharedId": "sharedId2",
              },
              "reference": Immutable.Map {
                "text": "Hu ha!",
                "selectionRectangles": Immutable.List [],
              },
            }
          }
        />
        <Connect(HubRelationshipMetadata)
          relationship={
            Immutable.Map {
              "entity": "sharedId2",
              "hub": 1,
              "template": null,
              "entityData": Immutable.Map {
                "sharedId": "sharedId2",
              },
              "reference": Immutable.Map {
                "text": "Hu ha!",
                "selectionRectangles": Immutable.List [],
              },
            }
          }
        />
      </div>
    </div>
    <div
      className="rightRelationship  "
      key="1"
    >
      <div
        className="rightRelationshipType"
      >
        <Connect(Doc)
          className="item-collapsed"
          doc={
            Immutable.Map {
              "sharedId": "sharedId4",
            }
          }
          onClick={[Function]}
          searchParams={
            Object {
              "order": "desc",
              "sort": "creationDate",
              "treatAs": "number",
            }
          }
          targetReference={null}
        />
        <Connect(HubRelationshipMetadata)
          relationship={
            Immutable.Map {
              "entity": "sharedId4",
              "hub": 1,
              "template": null,
              "entityData": Immutable.Map {
                "sharedId": "sharedId4",
              },
            }
          }
        />
      </div>
    </div>
  </div>
  <div
    className="rightRelationshipsTypeGroup "
    key="1"
  >
    <div
      className="rightRelationshipType
                             last-of-type"
    >
      <div
        className="rw-dropdown-list rw-widget no-edit"
      >
        <div
          className="rw-widget-input rw-widget-picker rw-widget-container no-edit"
        >
          <div
            className="rw-input rw-dropdown-list-input no-edit"
          />
        </div>
      </div>
    </div>
    <div
      className="rightRelationship  "
      key="0"
    >
      <div
        className="rightRelationshipType"
      >
        <Connect(Doc)
          className="item-collapsed"
          doc={
            Immutable.Map {
              "sharedId": "sharedId2",
            }
          }
          onClick={[Function]}
          searchParams={
            Object {
              "order": "desc",
              "sort": "creationDate",
              "treatAs": "number",
            }
          }
          targetReference={null}
        />
        <Connect(HubRelationshipMetadata)
          relationship={
            Immutable.Map {
              "entity": "sharedId2",
              "hub": 1,
              "template": "456",
              "entityData": Immutable.Map {
                "sharedId": "sharedId2",
              },
            }
          }
        />
      </div>
    </div>
    <div
      className="rightRelationship  "
      key="1"
    >
      <div
        className="rightRelationshipType"
      >
        <Connect(Doc)
          className="item-collapsed"
          doc={
            Immutable.Map {
              "sharedId": "sharedId3",
            }
          }
          onClick={[Function]}
          searchParams={
            Object {
              "order": "desc",
              "sort": "creationDate",
              "treatAs": "number",
            }
          }
          targetReference={
            Immutable.Map {
              "entity": "sharedId3",
              "hub": 1,
              "template": "456",
              "entityData": Immutable.Map {
                "sharedId": "sharedId3",
              },
              "reference": Immutable.Map {
                "text": ":D",
                "selectionRectangles": Immutable.List [],
              },
            }
          }
        />
        <Connect(HubRelationshipMetadata)
          relationship={
            Immutable.Map {
              "entity": "sharedId3",
              "hub": 1,
              "template": "456",
              "entityData": Immutable.Map {
                "sharedId": "sharedId3",
              },
              "reference": Immutable.Map {
                "text": ":D",
                "selectionRectangles": Immutable.List [],
              },
            }
          }
        />
      </div>
    </div>
  </div>
</div>
`;
