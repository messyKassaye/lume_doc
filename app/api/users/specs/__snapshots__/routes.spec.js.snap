// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`users routes DELETE should have a validation schema 1`] = `
Object {
  "children": Object {
    "_id": Object {
      "flags": Object {
        "presence": "required",
      },
      "invalids": Array [
        "",
      ],
      "type": "string",
    },
  },
  "flags": Object {
    "presence": "required",
  },
  "type": "object",
}
`;

exports[`users routes POST /recoverpassword should have a validation schema 1`] = `
Object {
  "children": Object {
    "email": Object {
      "flags": Object {
        "presence": "required",
      },
      "invalids": Array [
        "",
      ],
      "type": "string",
    },
  },
  "flags": Object {
    "presence": "required",
  },
  "type": "object",
}
`;

exports[`users routes POST /resetpassword should have a validation schema 1`] = `
Object {
  "children": Object {
    "key": Object {
      "flags": Object {
        "presence": "required",
      },
      "invalids": Array [
        "",
      ],
      "type": "string",
    },
    "password": Object {
      "flags": Object {
        "presence": "required",
      },
      "invalids": Array [
        "",
      ],
      "type": "string",
    },
  },
  "flags": Object {
    "presence": "required",
  },
  "type": "object",
}
`;

exports[`users routes POST /unlockaccount should have a validation schema 1`] = `
Object {
  "children": Object {
    "code": Object {
      "flags": Object {
        "presence": "required",
      },
      "invalids": Array [
        "",
      ],
      "type": "string",
    },
    "username": Object {
      "flags": Object {
        "presence": "required",
      },
      "invalids": Array [
        "",
      ],
      "type": "string",
    },
  },
  "flags": Object {
    "presence": "required",
  },
  "type": "object",
}
`;

exports[`users routes POST /users should have a validation schema 1`] = `
Object {
  "children": Object {
    "__v": Object {
      "invalids": Array [
        Infinity,
        -Infinity,
      ],
      "type": "number",
    },
    "_id": Object {
      "flags": Object {
        "presence": "required",
      },
      "invalids": Array [
        "",
      ],
      "rules": Array [
        Object {
          "arg": Object {
            "pattern": /\\^\\[0-9a-fA-F\\]\\{24\\}\\$/,
          },
          "name": "regex",
        },
      ],
      "type": "string",
    },
    "email": Object {
      "invalids": Array [
        "",
      ],
      "type": "string",
    },
    "password": Object {
      "invalids": Array [
        "",
      ],
      "type": "string",
    },
    "role": Object {
      "flags": Object {
        "allowOnly": true,
      },
      "invalids": Array [
        "",
      ],
      "type": "string",
      "valids": Array [
        "admin",
        "editor",
      ],
    },
    "username": Object {
      "invalids": Array [
        "",
      ],
      "type": "string",
    },
    "using2fa": Object {
      "falsy": Array [
        false,
      ],
      "flags": Object {
        "insensitive": true,
      },
      "truthy": Array [
        true,
      ],
      "type": "boolean",
    },
  },
  "flags": Object {
    "presence": "required",
  },
  "type": "object",
}
`;

exports[`users routes POST /users/new should have a validation schema 1`] = `
Object {
  "children": Object {
    "email": Object {
      "flags": Object {
        "presence": "required",
      },
      "invalids": Array [
        "",
      ],
      "type": "string",
    },
    "password": Object {
      "invalids": Array [
        "",
      ],
      "type": "string",
    },
    "role": Object {
      "flags": Object {
        "allowOnly": true,
        "presence": "required",
      },
      "invalids": Array [
        "",
      ],
      "type": "string",
      "valids": Array [
        "admin",
        "editor",
      ],
    },
    "username": Object {
      "flags": Object {
        "presence": "required",
      },
      "invalids": Array [
        "",
      ],
      "type": "string",
    },
  },
  "flags": Object {
    "presence": "required",
  },
  "type": "object",
}
`;
