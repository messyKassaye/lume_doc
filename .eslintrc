{
  "extends": ["airbnb"],
  "env": {
    "browser": true,
    "node": true,
    "jest": true,
    "jasmine": true,
    "es6": true
  },

  "plugins": ["react", "jest", "@typescript-eslint", "prettier"],

  "rules": {
    "prettier/prettier": ["error", { "requirePragma": false }],
    "indent": "off", // handled by prettier
    "operator-linebreak": "off", // handled by prettier
    "space-before-function-paren": "off", // handled by prettier
    "no-mixed-operators": "off",
    "no-underscore-dangle": "off",
    "comma-dangle": "off",
    "spaced-comment": "off",
    "object-curly-newline": "off",
    "function-paren-newline": "off",
    "react/prefer-stateless-function": "off",
    "no-confusing-arrow": "off",
    "newline-per-chained-call": "off",
    "no-prototype-builtins": "off",
    "implicit-arrow-linebreak": "off",
    "jest/no-focused-tests": "error",
    "object-curly-spacing": ["warn", "always"],
    "max-len": ["error", 150],
    "no-unused-vars": [
      "error",
      {
        "vars": "all",
        "argsIgnorePattern": "^_",
        "args": "all",
        "caughtErrors": "none",
        "ignoreRestSiblings": true
      }
    ],

    //all warns are activated by default if removed
    "prefer-promise-reject-errors": ["warn"],
    "max-classes-per-file": ["warn"],
    "padded-blocks": ["warn"],
    "consistent-return": ["warn"],
    "prefer-const": ["warn"],
    "arrow-body-style": ["warn"],
    "arrow-parens": ["off"], // handled by prettier
    "prefer-template": ["warn"],
    "no-tabs": ["warn"],
    "object-shorthand": ["warn"],
    "prefer-destructuring": ["warn"],
    "class-methods-use-this": ["warn"],
    "no-return-assign": ["warn"],
    "no-param-reassign": ["warn"],
    "array-callback-return": ["warn"],
    "prefer-arrow-callback": ["warn"],
    "jsx-quotes": ["warn"],
    "object-property-newline": ["warn"],
    "prefer-rest-params": ["warn"],
    "import/no-mutable-exports": ["warn"],
    "global-require": ["warn"],
    "react/no-string-refs": ["warn"],
    "no-unneeded-ternary": ["warn"],
    "no-useless-escape": ["warn"],
    "arrow-spacing": ["warn"],
    "no-empty": ["warn"],
    "no-cond-assign": ["warn"],
    "no-multiple-empty-lines": ["warn"],
    "lines-between-class-members": ["warn"],
    "max-lines": ["warn", 250],
    "max-params": ["warn", 4],
    "max-lines-per-function": "off",
    "max-statements": ["warn", { "max": 10 }, { "ignoreTopLevelFunctions": true }],

    //import
    "import/no-duplicates": ["warn"],
    "import/no-named-as-default": ["warn"],
    "import/prefer-default-export": ["off"],
    "import/first": ["warn"],
    "import/newline-after-import": ["warn"],
    "import/extensions": "off",
    "import/no-unresolved": "off",
    "import/order": ["warn"],
    "import/named": ["warn"],
    "import/no-cycle": ["warn"],
    "import/no-extraneous-dependencies": ["error", {"devDependencies": true}],

    //react
    "react/static-property-placement": "off",
    "react/no-deprecated": ["warn"],
    "react/self-closing-comp": ["warn"],
    "react/no-multi-comp": ["warn"],
    "react/jsx-closing-bracket-location": ["warn"],
    "react/jsx-boolean-value": ["warn"],
    "react/jsx-indent": ["off"], // handled by prettier,
    "react/jsx-indent-props": ["warn"],
    "react/no-array-index-key": ["warn"],
    "react/jsx-props-no-spreading": ["warn"],
    "react/jsx-first-prop-new-line": ["warn"],
    "react/no-unused-state": ["warn"],
    "react/jsx-wrap-multilines": ["off"], // handled by prettier,
    "react/jsx-curly-brace-presence": ["warn"],
    "react/jsx-curly-newline": "off",
    "react/require-default-props": ["warn"],
    "react/forbid-prop-types": ["warn"],
    "react/jsx-no-bind": ["warn"],
    "react/sort-comp": ["warn"],
    "react/jsx-closing-tag-location": ["warn"],
    "react/jsx-max-props-per-line": ["warn"],
    "react/no-unescaped-entities": ["warn"],
    "react/no-unused-prop-types": ["warn"],
    "react/jsx-no-target-blank": ["warn"],
    "react/jsx-filename-extension": "off",
    "react/jsx-tag-spacing": "off",
    "react/destructuring-assignment": ["off"],
    "react/jsx-one-expression-per-line": "off",
    "import/no-useless-path-segments": ["warn"],
    "react/button-has-type": ["warn"],
    "react/no-access-state-in-setstate": ["warn"],
    "react/jsx-pascal-case": ["warn"],

    //jsx-a11y
    "jsx-a11y/anchor-is-valid": ["warn"],
    "jsx-a11y/label-has-for": ["off"],
    "jsx-a11y/html-has-lang": ["warn"],
    "jsx-a11y/iframe-has-title": ["warn"],
    "jsx-a11y/tabindex-no-positive": ["warn"],
    "jsx-a11y/no-noninteractive-element-interactions": ["warn"],
    "jsx-a11y/control-has-associated-label": ["warn"],
    "jsx-a11y/alt-text": ["warn"],
    "jsx-a11y/no-static-element-interactions": "off",
    "jsx-a11y/click-events-have-key-events": "off",
    "jsx-a11y/mouse-events-have-key-events": "off",
    "jsx-a11y/label-has-associated-control": "off"
  },
  "overrides": [
    {
      "files": ["app/**/*spec.js"],
      "rules": {
        "max-lines-per-function": "off"
      }
    },
    {
      "files": ["app/**/*.ts*", "database/**/*.ts", "e2e/**/*.ts"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "rules": {
        "quotes": "off",
        "@typescript-eslint/quotes": [
          "error",
          "single",
          {
            "avoidEscape": true
          }
        ],
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": ["error"],
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": ["error"],
        "no-unused-vars": "off",

        //https://github.com/typescript-eslint/typescript-eslint/issues/662
        "no-undef": "off",

        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "vars": "all",
            "argsIgnorePattern": "^_",
            "args": "all",
            "caughtErrors": "none",
            "ignoreRestSiblings": true
          }
        ],
        "@typescript-eslint/no-explicit-any": [
          "off",
          {
            "fixToUnknown": false,
            "ignoreRestArgs": false
          }
        ],
        "@typescript-eslint/explicit-function-return-type": [
          "off",
          {
            "allowExpressions": true
          }
        ],
        // This is broken for ts, but circleci protects us.
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/no-misused-promises": "error",
        "@typescript-eslint/promise-function-async": "error"
      }
    }
  ]
}
